name: Containers

on: [push]

jobs:
  build-containers:
    runs-on: ubuntu-latest
    steps:
      - uses: linz/action-typescript@v2
        with:
          package-manager: npm

      - name: Get GIT Version infromation
        id: version
        run: |
            GIT_HASH=$(git rev-parse HEAD)
            GIT_VERSION=$(git describe --tags --always --match 'v*')
            GIT_VERSION_MAJOR=$(echo $GIT_VERSION | cut -d. -f1)
            GIT_VERSION_MAJOR_MINOR=$(echo $GIT_VERSION | cut -d. -f1,2)

            echo "hash=${GIT_HASH}" >> $GITHUB_OUTPUT
            echo "version=${GIT_VERSION}" >> $GITHUB_OUTPUT
            echo "version_major=${GIT_VERSION_MAJOR}" >> $GITHUB_OUTPUT
            echo "version_major_minor=${GIT_VERSION_MAJOR_MINOR}" >> $GITHUB_OUTPUT

      - name: Setup docker tags
        id: tags
        uses:  actions/github-script@v6
        with: 
            result-encoding: string
            script: 
              const tags = [];
              tags.push('ghcr.io/${{ github.repository }}:latest');
              tags.push('ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}');
              return tags.join(', ')

      - name: Set up Docker Qemu
        id: qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push - Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.tags.outputs.result }}
          args:
            GIT_VERSION=${{ steps.version.outputs.version }}
            GIT_HASH=${{ steps.version.outputs.hash }}
          push: false

